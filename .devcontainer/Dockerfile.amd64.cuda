# FROM nvidia/cuda:11.3.0-cudnn8-runtime-ubuntu20.04
FROM nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04

ENV DEBIAN_FRONTEND=noninteractive
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"
ENV LIBRARY_PATH="/usr/local/cuda/lib64:/usr/local/lib:${LIBRARY_PATH}"
ENV CUDA_HOME="/usr/local/cuda"
ENV CCACHE_DIR="/opt/cache"
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all

WORKDIR /opt

RUN apt update && \
    apt install -y \
    gnupg2 \
    curl \
    ca-certificates && \
    rm -rf /var/lib/apt/lists/* \
    && apt-get clean

RUN apt-get update && \
    apt upgrade -y && \
    apt-get -y install --no-install-recommends \
    libavcodec-dev \
    curl \
    wget \
    zip \
    unzip \
    cmake \
    ccache \
    python3-dev \
    python3-pip \
    python3 \
    sudo \
    build-essential \
    git \
    libopenmpi-dev \
    libopenblas-base \
    software-properties-common && \
    rm -rf /var/lib/apt/lists/* && \
    apt clean


RUN pip3 install typing_extensions pyyaml

RUN cd /tmp && \
    # wget -O libtorch.zip https://download.pytorch.org/libtorch/cu113/libtorch-shared-with-deps-1.10.0%2Bcu113.zip && \
    wget -O libtorch.zip https://download.pytorch.org/libtorch/cu102/libtorch-cxx11-abi-shared-with-deps-1.10.0%2Bcu102.zip && \
    unzip libtorch.zip && \
    mv /tmp/libtorch /usr/local/libtorch

RUN cd /opt && \
    wget -q https://golang.org/dl/go1.17.3.linux-amd64.tar.gz && \
    rm -rf /usr/local/go && \
    tar -C /usr/local -xzf go1.17.3.linux-amd64.tar.gz && \
    rm /opt/go1.17.3.linux-amd64.tar.gz

ENV PATH=$PATH:/usr/local/go/bin

ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid ${USER_GID} ${USERNAME} && \
    useradd -s /bin/bash --uid ${USER_UID} --gid ${USERNAME} -m ${USERNAME} && \
    usermod -aG sudo ${USERNAME} && \
    mkdir -p /etc/sudoers.d && \
    echo ${USERNAME} ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/${USERNAME} && \
    chmod 0440 /etc/sudoers.d/${USERNAME}

ENV TARGET_GOPATH=/usr/local/go
ENV GO111MODULE=on
RUN mkdir -p /tmp/gotools /usr/local/etc/vscode-dev-containers ${TARGET_GOPATH}/bin && \
    cd /tmp/gotools  && \
    export GOPATH=/tmp/gotools && \
    export GOCACHE=/tmp/gotools/cache && \
    go install golang.org/x/tools/gopls@latest && \
    go install honnef.co/go/tools/cmd/staticcheck@latest && \
    go install golang.org/x/lint/golint@latest && \
    go install github.com/mgechev/revive@latest && \
    go install github.com/uudashr/gopkgs/v2/cmd/gopkgs@latest && \
    go install github.com/ramya-rao-a/go-outline@latest && \
    go install github.com/go-delve/delve/cmd/dlv@latest && \
    go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && \
    mv /tmp/gotools/bin/* ${TARGET_GOPATH}/bin/


ENV LIBRARY_PATH="/usr/local/libtorch/lib:${LIBRARY_PATH}"
ENV LD_LIBRARY_PATH="/usr/local/libtorch/lib:${LD_LIBRARY_PATH}"
ENV C_INCLUDE_PATH="/usr/local/libtorch/include:/usr/local/libtorch/include/torch/csrc/api/include:${C_INCLUDE_PATH}"
ENV CPLUS_INCLUDE_PATH="/usr/local/libtorch/include:/usr/local/libtorch/include/torch/csrc/api/include:${CPLUS_INCLUDE_PATH}"

# FOR 11.3
# RUN ln -s /usr/local/cuda/targets/x86_64-linux/lib/libcudart.so.11.0 /usr/local/lib/libcudart.so && \
#     ln -s /usr/local/cuda/targets/x86_64-linux/lib/libcublas.so.11 /usr/local/lib/libcublas.so && \
#     ln -s /usr/local/cuda/targets/x86_64-linux/lib/libnvrtc.so.11.2 /usr/local/lib/libnvrtc.so && \
#     ln -s /usr/local/cuda/targets/x86_64-linux/lib/libnvrtc-builtins.so.11.3 /usr/local/lib/libnvrtc-builtins.so && \
#     ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.8  /usr/local/lib/libcudnn.so && \
#     ldconfig

RUN ln -s /usr/local/cuda/targets/x86_64-linux/lib/libcudart.so.10.2 /usr/local/lib/libcudart.so && \
    ln -s /usr/lib/x86_64-linux-gnu/libcublas.so.10 /usr/local/lib/libcublas.so && \
    ln -s /usr/local/cuda/targets/x86_64-linux/lib/libnvrtc.so.10.2 /usr/local/lib/libnvrtc.so && \
    ln -s /usr/local/cuda/targets/x86_64-linux/lib/libnvrtc-builtins.so.10.0 /usr/local/lib/libnvrtc-builtins.so && \
    ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.8  /usr/local/lib/libcudnn.so && \
    ldconfig

